# -*- coding: utf-8 -*-
"""
Created on Thu Jun 30 14:33:05 2022

@author: AyÃ§a
"""

# -*- coding: utf-8 -*-
"""anomaly_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s1aw5yRrMBR4CLkqCgAjnoiSpESKfiAj

# Mounting drive for file access
"""
#%%
#LIBRARIES
#Custom Library Connection
import sys
import os

#Data Processing
import pandas as pd
import numpy as np
import math
import datetime
from datetime import date, timedelta

#Execution Time
import time

#Memory Profiler
from memory_profiler import profile

#Plots
import matplotlib.pyplot as plt
import matplotlib.dates
from matplotlib.pyplot import figure
import plotly.graph_objects as go
import plotly.figure_factory as ff
import plotly.express as px

#Fourier Transform
from scipy.fft import fft
from scipy.signal import find_peaks


#Tensorflow
import tensorflow as tf
from tensorflow import keras
from sklearn.preprocessing import MinMaxScaler


np.random.seed(1)
tf.random.set_seed(1)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, LSTM, Dropout, RepeatVector, TimeDistributed

#Anomaly Detection
from sklearn.cluster import KMeans
from sklearn.ensemble import IsolationForest

#MongoDb
from pymongo import MongoClient, errors

"""## Importing Custom Libraries"""

from models import*


from helperfunctions import*

"""## Read from spec.ini file """
import configparser
config = configparser.ConfigParser()
config.read('specs.ini') #Read paths, connection parameters from file
#%%CONSTANTS
ROW_LIMIT = 500000 #Maximum number of rows that will be read from database
#%% DB Connection
global_st = time.time()
st = time.time()
client = MongoClient(config["MONGODB"]["connection_string"], 
                        maxPoolSize=None,
                        unicode_decode_error_handler=config["MONGODB"]["error_handler"])
    
try:
    db = client.obc
    collections = db.list_collection_names()
    if len(collections)>0:
        print("Collections gathered with Mongo")
except errors.ServerSelectionTimeoutError:
    print("Have you started the mongo start up process?")
    #return
et = time.time()
elapsed_time = et - st
print('Execution time of data retrieving:', elapsed_time/60 , 'minutes\n')
yesterday = datetime.datetime.strptime('2022-02-28 22:59:59.988000', '%Y-%m-%d %H:%M:%S.%f') - timedelta(days=1)
df = pd.DataFrame(db.data.find())
print(pd.DataFrame(db.data.find({"Timestamp":{"$gt": yesterday}})).iloc[-1].Timestamp)
if pd.DataFrame(db.data.find({"Timestamp":{"$gt": yesterday}})).iloc[-1].Timestamp not in df.Timestamp:
    print("no")
else:
    print("YES")

